[build-system]
requires = [
  "hatch-fancy-pypi-readme >=23.1.0",
  "hatchling >=1.23.0",
  "pybind11 >=2.13.0,<3.0",
  "scikit-build-core>=0.10",
  "setuptools_scm>=8.0"
]
build-backend = "scikit_build_core.build"

[project]
name = "raven-hydro"
authors = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"}
]
description = "A Python wrapper to set-up and build the hydrologic modelling framework Raven."
license = {file = "LICENSE"}
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: Artistic License",
  "Natural Language :: English",
  "Programming Language :: C++",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Hydrology"
]
keywords = ["raven", "hydrologic", "hydrology", "model", "cmake", "scikit-build", "pybind11", "python", "wrapper"]
dynamic = ["readme", "version"]
dependencies = []

[project.urls]
"About Ouranos" = "https://www.ouranos.ca/en"
"About Raven" = "https://raven.uwaterloo.ca/About.html"
"Homepage" = "https://github.com/Ouranosinc/raven-hydro"
"Issue tracker" = "https://github.com/Ouranosinc/raven-hydro/issues"

[tool]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"
start-after = "<!-- cut after this -->\n\n"
end-before = "\n\n<!-- but before this -->"

[tool.scikit-build]
build-dir = "build"
experimental = true
minimum-version = "build-system.requires"

[tool.scikit-build.cmake]
version = ">=3.26.1"
build-type = "Release"

[tool.scikit-build.cmake.define]
# specify whether to download the files even in the git submodule has been initialized and pulled
ALWAYS_DOWNLOAD = false
# trigger the exe building block in the CMakeLists.txt
COMPILE_EXE = true
# trigger the library building block in the CMakeLists.txt (NOT YET IMPLEMENTED)
COMPILE_LIB = false
# trigger the python library building block in the CMakeLists.txt
PYTHON = true
# the folder where the netcdf finding script is located
HELPERS = "helpers"
# the git repository to download the RavenHydroFramework from and the tag to check out
RAVEN_GIT_REPO = "https://github.com/CSHS-CWRA/RavenHydroFramework"
RAVEN_GIT_TAG = "2512970bca65009c55906dc50a4d22bb5d727fe4"
# specify whether to use the netcdf library
USE_NETCDF = true

[tool.scikit-build.logging]
level = "DEBUG"

[tool.scikit-build.metadata]
readme.provider = "scikit_build_core.metadata.fancy_pypi_readme"
version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.scikit-build.ninja]
version = ">=1.11.0"

[tool.scikit-build.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.md",
  "CHANGELOG.md",
  "CMakeLists.txt",
  "LICENSE",
  "README.md",
  "helpers/FindNetCDF.cmake",
  "RavenHydroFramework/AUTHORS.md",
  "RavenHydroFramework/LICENSE",
  "RavenHydroFramework/README.md",
  "RavenHydroFramework/src",
  "src/raven_hydro/__init__.py",
  "src/raven_hydro/_version.py"
]
exclude = [
  ".*",
  "build",
  "dist",
  "environment.yml",
  "Raven_errors.txt",
  "RavenHydroFramework/benchmarking"
]

[tool.scikit-build.wheel]
expand-macos-universal-tags = true
license-files = ["LICENSE", "RavenHydroFramework/LICENSE"]

[tool.setuptools_scm] # Section required
write_to = "src/raven_hydro/_version.py"
