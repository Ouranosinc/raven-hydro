name: raven-hydro Testing Suite

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  pip:
    name: Pip with Python${{ matrix.python-version }} on ${{ matrix.os }} (conda=${{ matrix.conda }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - python-version: "3.9"
            os: ubuntu-latest
            conda: false
          - python-version: "3.9"
            os: macos-latest
            conda: true
          - python-version: "3.9"
            os: windows-latest
            conda: true
          - python-version: "3.10"
            os: ubuntu-latest
            conda: true
          - python-version: "3.10"
            os: macos-latest
            conda: false
          - python-version: "3.10"
            os: windows-latest
            conda: true
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python${{ matrix.python-version }}
        if: ${{ !matrix.conda }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Python${{ matrix.python-version }} with NetCDF4 (conda)
        if: ${{ matrix.conda }}
        uses: mamba-org/provision-with-micromamba@main
        with:
          cache-downloads: true
          micromamba-version: 'latest'
          extra-specs: |
            python=${{ matrix.python-version }}

      - name: Set LD_PRELOAD for NetCDF source files (Linux + conda)
        if: |
          (matrix.os == 'ubuntu-latest) && (matrix.conda)
        run: |
          echo "LD_PRELOAD=$(find /home/runner/micromamba-root/envs/raven_hydro -name libnetcdf.*so | head -n 1)" >> $GITHUB_ENV
      - name: Link NetCDF/HDF (macOS + conda)
        if: (matrix.os == 'macos-latest') && (matrix.conda)
        run: |
          sudo ln -s $(find /Users/runner/micromamba-root/envs/ravenpy -name libnetcdf.*dylib | head -n 1) /usr/local/lib/libnetcdf.19.dylib
          sudo ln -s $(find /Users/runner/micromamba-root/envs/ravenpy -name libmfhdf.*dylib | head -n 1) /usr/local/lib/libmfhdf.0.dylib
          sudo ln -s $(find /Users/runner/micromamba-root/envs/ravenpy -name libdf.*dylib | head -n 1) /usr/local/lib/libdf.0.dylib
          sudo ln -s $(find /Users/runner/micromamba-root/envs/ravenpy -name libhdf5_hl.*dylib | head -n 1) /usr/local/lib/libhdf5_hl.200.dylib
          sudo ln -s $(find /Users/runner/micromamba-root/envs/ravenpy -name libhdf5.*dylib | head -n 1) /usr/local/lib/libhdf5.200.dylib

      - name: Install NetCDF4 (Ubuntu)
        if: |
          (matrix.os == 'ubuntu-latest') && (!matrix.conda)
        run: |
          sudo apt-get update
          sudo apt-get install libnetcdf-dev
          echo "LD_PRELOAD=$(find /home/runner/micromamba-root/envs/raven_hydro -name libnetcdf.*so | head -n 1)" >> $GITHUB_ENV
      - name: Install NetCDF4 (macOS)
        if: |
          (matrix.os == 'macos-latest') && (!matrix.conda)
        uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: netcdf
          cache: yes

      - name: Install raven-hydro
        run: |
          python3 -m pip install --editable .
      - name: Test
        run: |
          python3 -c "import raven_hydro; print(raven_hydro.__version__)"
          raven